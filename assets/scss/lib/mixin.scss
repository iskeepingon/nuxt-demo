@mixin hack($name, $value) {
	-moz-#{$name}: $value;
	-webkit-#{$name}: $value;
	#{$name}: $value;
}

@mixin borderRadius($param) {
	@include hack(border-radius, $param);
}

@mixin gra($begin, $end) {
	background-image: -webkit-gradient(linear, left top, left bottom, from($begin), to($end));
	background-image: -webkit-linear-gradient(top, $begin, $end);
	background-image: -moz-linear-gradient(top, $begin, $end);
	background-image: -o-linear-gradient(top, $begin, $end);
	background-image: linear-gradient(top, $begin, $end);
}

@mixin rotate($degrees) {
	@include hack(transform, rotate($degrees));
}

@mixin scale($x, $y) {
	@include hack(transform, scale($x, $y));
}

@mixin center() {
	display: flex;
	justify-content: center;
	align-items: center;
}


// 渐变色
@mixin gradient($from, $to, $deg: 0) {
	background: -webkit-linear-gradient($deg, $from, $to);
	/* webkit核心浏览器兼容代码 */
	background: -o-linear-gradient($deg, $from, $to);
	/* Opera浏览器兼容代码 */
	background: -moz-linear-gradient($deg, $from, $to);
	/* Firefox 浏览器兼容代码 */
	background: linear-gradient($deg, $from, $to);
}


/* icon 引入 */

@mixin icon($width, $height, $src) {
	display: inline-block;
	width: $width;
	height: $height;
	background: url($src) no-repeat;
	background-size: contain;
}

/* 背景图片引入 */

@mixin bg($width, $height, $src) {
	width: $width;
	height: $height;
	background: url($src) no-repeat;
	background-size: 100% 100%;
}

/*
    按钮
    $from：按钮背景颜色，如果只传一个值就是单色背景
    $to：按钮渐变颜色
    $deg：渐变角度
*/

@mixin btn($from, $to:'#00000F', $deg:0) {
	text-align: center;
	border-radius: 1000px;
	//居中
	@include center();
	@if ($to=='#00000F') {
		$to: $from;
	}
	@include gradient($from, $to, $deg);
}





// 超出隐藏，定义行数
@mixin ellipsis($num:1) {
	overflow: hidden;
	text-overflow: ellipsis;
	@if ($num == 1) {
		white-space: nowrap;
	} @else {
		white-space: normal;
		// 文本多行截断需要使用私有属性
		/* stylelint-disable value-no-vendor-prefix, property-no-vendor-prefix */
		display: -webkit-box;
		-webkit-line-clamp: $num;
		-webkit-box-orient: vertical;
		/* stylelint-enable */
	}
}


/* 按钮 */

@mixin bigBtn($width, $height, $borderRadius, $bgColor: transparent, $fontColor: #fff, $fontSize: 26px) {
	width: $width;
	height: $height;
	border-radius: $borderRadius;
	color: $fontColor;
	font-size: $fontSize;
	background-color: $bgColor;
	letter-spacing: 1px;
	@include center();
}


/* 遮罩 */

@mixin mask {
	position: fixed;
	z-index: 999;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background-color: #000;
	opacity: 0.5;
}


/* 全屏遮罩上下居中 */

@mixin verticalMinddle {
	position: fixed;
	z-index: 1000;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	flex-direction: column;
	justify-content: center;
	height: 100%;
	text-align: center;
}

@mixin verticalMinddleContent {
	align-self: center;
}

/* 呼吸按钮动画 */
@mixin breathingBtn () {
	animation: breathing_btn 0.45s linear 0s infinite alternate;
	backface-visibility: hidden; /* 元素旋转时隐藏背面 */
	transform-style: preserve-3d; /* 保留3D空间 */
}

/* 小手引导动画 */
@mixin animationHand () {
	animation: hand_animation 0.2s linear infinite alternate;
	backface-visibility: hidden; /* 元素旋转时隐藏背面 */
	transform-style: preserve-3d; /* 保留3D空间 */
}
%clearfix{
	zoom: 1;
	&::before,&::after{
		display: block;
		height: 0;
		content: '';
		clear: both;
	}
}

$border-color: #ccc;

@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

@mixin border1px($borderTop: 1, $borderRight: 1, $borderBottom: 1, $borderLeft: 1,$color: $border-color, $borderRadius: 0, $colorOpacity: 1) {
	$borderTop: strip-unit($borderTop);
	$borderRight: strip-unit($borderRight);
	$borderBottom: strip-unit($borderBottom);
	$borderLeft: strip-unit($borderLeft);
	$borderRadius: strip-unit($borderRadius);

	// 防御传currentColor关键字
	@if $color == currentColor {
		$color: $border-color;
	}

	border-style: solid;
	border-width: #{$borderTop}PX #{$borderRight}PX #{$borderBottom}PX #{$borderLeft}PX;
	border-color: rgba($color, $colorOpacity);
	border-radius: $borderRadius + PX;

	@media screen and (-webkit-min-device-pixel-ratio: 2) {
		// border-image裁剪宽度
		$sliceWidth: 1;

		border-color: transparent;
		@if $borderRadius > 0 {
			$borderTop: $borderRadius;
			$borderRight: $borderRadius;
			$borderBottom: $borderRadius;
			$borderLeft: $borderRadius;

			$sliceWidth: $borderRadius;

			border-width: #{$borderTop}PX #{$borderRight}PX #{$borderBottom}PX #{$borderLeft}PX;
			border-radius: #{$borderRadius}PX;
		}

		// 缩放因子，因svg画rect描边不完美，所以裁剪最小宽度为3
		$SCALE_FACTOR: 3;

		$minSvgWh: $sliceWidth * $SCALE_FACTOR * 2  + 1; // svg宽、高

		$bdT: if($borderTop == 0, $SCALE_FACTOR, $borderTop * $SCALE_FACTOR);
		$bdR: if($borderRight == 0, $SCALE_FACTOR, $borderRight * $SCALE_FACTOR);
		$bdB: if($borderBottom == 0, $SCALE_FACTOR, $borderBottom * $SCALE_FACTOR);
		$bdL: if($borderLeft == 0, $SCALE_FACTOR, $borderLeft * $SCALE_FACTOR);

		// 解决svg #转义问题
		$colorR: red($color);
		$colorG: green($color);
		$colorB: blue($color);

		border-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{$minSvgWh} #{$minSvgWh}' width='#{$minSvgWh}px' height='#{$minSvgWh}px'><rect x='1' y='1' stroke-width='1' width='#{$minSvgWh - 2}' height='#{$minSvgWh - 2}' rx='#{$borderRadius * $SCALE_FACTOR}' ry='#{$borderRadius * $SCALE_FACTOR}' style='stroke: rgba(#{$colorR, $colorG, $colorB, $colorOpacity})' fill='transparent' /></svg>") $bdT $bdR $bdB $bdL stretch;


		& > :only-of-type {
			@if $borderRadius > 1 {
				margin: #{-($borderRadius - 1)}PX;
			}
		}

		@supports (-webkit-overflow-scrolling: touch) {
			// iOS支持.5
			border-width:#{$borderTop / 2}PX  #{$borderRight / 2}PX  #{$borderBottom / 2}PX #{$borderLeft / 2}PX;
			border-color: $color;
			border-image:none;
		}
	}

	@media screen and (-webkit-min-device-pixel-ratio: 3) {
		@supports (-webkit-overflow-scrolling: touch) {
			// iOS支持.3
			border-width:#{$borderTop / 3}PX #{$borderRight / 3}PX #{$borderBottom / 3}PX #{$borderLeft / 3}PX;
		}
	}
}

// border-top
@mixin bd-top($color: $border-color, $opacity: 1) {
	@include border1px(1, 0, 0, 0, $color, 0, $colorOpacity: $opacity);
}

// border-right
@mixin bd-right($color: $border-color, $opacity: 1) {
	@include border1px(0, 1, 0, 0, $color, 0, $colorOpacity: $opacity);
}

// border-bottom
@mixin bd-bottom($color: $border-color, $opacity: 1) {
	@include border1px(0, 0, 1, 0, $color, 0, $colorOpacity: $opacity);
}

// border-left
@mixin bd-left($color: $border-color, $opacity: 1) {
	@include border1px(0, 0, 0, 1, $color, 0, $colorOpacity: $opacity);
}

// border-top&border-bottom
@mixin bd-tb($color: $border-color, $opacity: 1) {
	@include border1px(1, 0, 1, 0, $color, 0, $colorOpacity: $opacity);
}

// border-radius
@mixin bd-radius($border-radius: 4, $color: $border-color, $opacity: 1) {
	@include border1px(1, 1, 1, 1, $color, $border-radius, $colorOpacity: $opacity);
}